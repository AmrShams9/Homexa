<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <title>تعديل الطلب</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; padding: 20px; }
    .form-container { background: white; padding: 30px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
    .form-label { font-weight: bold; }
    .services-section h4 { cursor: pointer; margin-top: 15px; }
    #totalPrice { font-weight: bold; color: #f15a29; }
  </style>
  <style>
    body { font-family: 'Arial', sans-serif; background-color: #f9f9f9; text-align: right; direction: rtl; padding: 20px; }
    .container { max-width: 700px; margin: auto; background-color: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
    h3 { margin-bottom: 10px; cursor: pointer; user-select: none; }
    label { display: block; margin-bottom: 5px; }
    input[type="checkbox"] { margin-left: 10px; }
    input[type="submit"] { margin-top: 20px; padding: 10px 20px; background-color: #f15a29; color: white; border: none; border-radius: 5px; cursor: pointer; }
    #totalPrice { font-size: 1.2em; color: #f15a29; }
</style>
</head>
<body>
<div class="container">
  <div class="form-container">
    <h2>تعديل الطلب</h2>
    <form id="editTaskForm" action="/update_task/<%= task.id %>" method="POST">
      <div class="mb-3">
        <label class="form-label">اسم العميل</label>
        <input type="text" class="form-control" name="customerName" value="<%= task.customerName %>" required>
      </div>

      <div class="mb-3">
        <label class="form-label">رقم الهاتف</label>
        <input type="text" class="form-control" name="customerPhone" value="<%= task.customerPhone %>" required>
      </div>

      <div class="row">
        <input id="map-search" type="text" placeholder="ابحث عن موقع" class="form-control my-3">
<div id="map" style="height: 300px; width: 100%; margin-bottom: 15px;"></div>
<input type="hidden" id="customerLat" name="customerLat" value="<%= task.customerLat %>">
<input type="hidden" id="customerLng" name="customerLng" value="<%= task.customerLng %>">



        </div>
      <!-- </div> -->

      <!-- خدمات متعددة -->
      <div class="services-section mt-4">
        <%- include('partials/services-selection', { selectedServiceIds: task.serviceIds }) %>
      </div>

      <div class="mb-3 mt-3">
        <label class="form-label">وقت الخدمة</label>
        <input type="text" class="form-control" name="serviceTime" value="<%= task.serviceTime %>" required>
      </div>

      <div class="mb-3">
        <label class="form-label">طريقة الدفع</label>
        <select class="form-select" name="paymentMethod" required>
          <option value="">اختر</option>
          <option value="دفع لدى المعرض" <%= task.paymentMethod === 'دفع لدى المعرض' ? 'selected' : '' %>>دفع لدى المعرض</option>
          <option value="الدفع عند التركيب" <%= task.paymentMethod === 'الدفع عند التركيب' ? 'selected' : '' %>>الدفع عند التركيب</option>
        </select>
      </div>

      <div class="mb-3">
        <label class="form-label">الحالة</label>
        <select class="form-select" name="status" required>
          <option value="Assigned" <%= task.status === 'Assigned' ? 'selected' : '' %>>Assigned</option>
          <option value="InProgress" <%= task.status === 'InProgress' ? 'selected' : '' %>>In Progress</option>
          <option value="On Hold" <%= task.status === 'On Hold' ? 'selected' : '' %>>On Hold</option>
          <option value="completed" <%= task.status === 'completed' ? 'selected' : '' %>>Completed</option>
          <option value="canceled" <%= task.status === 'canceled' ? 'selected' : '' %>>Canceled</option>
          <option value="New" <%= task.status === 'New' ? 'selected' : '' %>>New</option>
        </select>
      </div>

      <div class="mb-3">
        <h5>الإجمالي: <span id="totalPrice"><%= task.totalPrice %></span> SAR</h5>
<input type="hidden" name="totalPrice" id="hiddenTotalPrice" value="<%= task.totalPrice %>">
      </div>
      <!-- <input type="hidden" name="totalPrice" id="hiddenTotalPrice"> -->


      <button type="submit" class="btn btn-primary w-100">💾 حفظ التعديلات</button>
    </form>
  </div>
</div>

<script>
  // تحديث السعر تلقائيًا
  function updateTotalPrice() {
        let total = 0;
        document.querySelectorAll('input[type="checkbox"]:checked').forEach(cb => {
            total += parseFloat(cb.dataset.price);
        });
        document.getElementById('totalPrice').innerText = total.toFixed(2);
        document.getElementById('hiddenTotalPrice').value = total.toFixed(2);
    }

    document.querySelectorAll('input[type="checkbox"]').forEach(cb => {
        cb.addEventListener('change', updateTotalPrice);
    });

    // تشغيل التحديث بمجرد فتح الصفحة
    window.onload = updateTotalPrice;
</script>
<script>
    function toggleVisibility(sectionId) {
        const section = document.getElementById(sectionId);
        section.style.display = section.style.display === "none" ? "block" : "none";
    }

    document.getElementById("orderForm").addEventListener("change", function() {
        let total = 0;
        document.querySelectorAll('input[type="checkbox"]:checked').forEach(service => {
            total += parseFloat(service.dataset.price);
        });
        document.getElementById('totalPrice').innerText = total;
    });

    document.getElementById("orderForm").addEventListener("submit", function(event) {
        event.preventDefault();
        const selectedServices = Array.from(document.querySelectorAll('input[type="checkbox"]:checked'))
                                      .map(service => service.dataset.id);
        fetch("/addtask", {
            method: "POST",
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify({ services: selectedServices })
        })
        .then(response => response.json())
        .then(result => {
            if(result.success) {
                alert("تم إرسال الطلب بنجاح!");
                window.location.reload();
            } else {
                alert("حدث خطأ: " + result.message);
            }
        })
        .catch(error => console.error('Error:', error));
    });

    function updateTotalPrice() {
  let total = 0;
  document.querySelectorAll('input[type="checkbox"]:checked').forEach(cb => {
    total += parseFloat(cb.dataset.price);
  });
  document.getElementById('totalPrice').innerText = total.toFixed(2);
  document.getElementById('hiddenTotalPrice').value = total.toFixed(2);
}

document.querySelectorAll('input[type="checkbox"]').forEach(cb => {
  cb.addEventListener('change', updateTotalPrice);
});

window.onload = updateTotalPrice;

const selectedServices = Array.from(document.querySelectorAll('input[type="checkbox"]:checked')).map(cb => {
  const qtyInput = cb.closest('.service-item').querySelector('.qty-input');
  return {
    id: cb.dataset.id,
    quantity: parseInt(qtyInput?.value || 1)
  };
});

const orderData = {
 
  services: selectedServices,
  totalPrice: parseFloat(document.getElementById("totalPrice").innerText)
};
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAFZcWUfcnxoAlGVGf7X7b4pE2IxbHDYzw&libraries=places"></script>
<script>
  let map, marker, geocoder, searchBox;

  function initMap() {
      const initialPosition = { lat: 24.7136, lng: 46.6753 };
      map = new google.maps.Map(document.getElementById('map'), {
          center: initialPosition,
          zoom: 10
      });

      geocoder = new google.maps.Geocoder();

      map.addListener('click', function(event) {
          placeMarker(event.latLng);
      });

      const input = document.getElementById('map-search');
      searchBox = new google.maps.places.SearchBox(input);

      map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

      map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
      });

      searchBox.addListener('places_changed', function() {
          const places = searchBox.getPlaces();

          if (places.length === 0) return;

          const place = places[0];
          if (!place.geometry) return;

          if (marker) marker.setMap(null);

          map.panTo(place.geometry.location);
          placeMarker(place.geometry.location);
      });
  }

  let selectedLocation = { lat: null, lng: null };

function placeMarker(location) {
  if (marker) marker.setMap(null);

  marker = new google.maps.Marker({
      position: location,
      map: map,
      draggable: true
  });

  selectedLocation.lat = location.lat();
  selectedLocation.lng = location.lng();

  // Set hidden fields
  document.getElementById('customerLat').value = selectedLocation.lat;
  document.getElementById('customerLng').value = selectedLocation.lng;

  geocoder.geocode({ 'location': location }, function(results, status) {
      if (status === 'OK' && results[0]) {
          document.getElementById('customerLocation').value = results[0].formatted_address;
      } else {
          document.getElementById('customerLocation').value = `Lat: ${location.lat()}, Lng: ${location.lng()}`;
      }
  });

  marker.addListener('dragend', function() {
      selectedLocation.lat = marker.getPosition().lat();
      selectedLocation.lng = marker.getPosition().lng();

      document.getElementById('customerLat').value = selectedLocation.lat;
      document.getElementById('customerLng').value = selectedLocation.lng;

      geocoder.geocode({ 'location': marker.getPosition() }, function(results, status) {
          if (status === 'OK' && results[0]) {
              document.getElementById('customerLocation').value = results[0].formatted_address;
          } else {
              document.getElementById('customerLocation').value = `Lat: ${selectedLocation.lat}, Lng: ${selectedLocation.lng}`;
          }
      });
  });
}

  function getLocation() {
      if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
              const userLocation = {
                  lat: position.coords.latitude,
                  lng: position.coords.longitude
              };
              map.setCenter(userLocation);
              placeMarker(userLocation);
          }, function() {
              alert("تعذر تحديد الموقع الحالي");
          });
      } else {
          alert("متصفحك لا يدعم خدمة تحديد الموقع");
      }
  }
  function updateLocationFields(location) {
  document.getElementById('customerLat').value = location.lat();
  document.getElementById('customerLng').value = location.lng();
}


  window.onload = initMap;
  window.onload = () => {
  initMap();

  // في حال لم يضغط المستخدم على الخريطة، نتأكد من إرسال القيم الحالية من قاعدة البيانات
  if (!document.getElementById('customerLat').value || !document.getElementById('customerLng').value) {
    document.getElementById('customerLat').value = 24.7136;
    document.getElementById('customerLng').value = 46.6753;
  }
};

</script>

</body>
</html>
