<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <title>تعديل الطلب</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
  <style>
    body { background-color: #f8f9fa; padding: 20px; font-family: 'Arial', sans-serif; }
    .form-container { background: white; padding: 30px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
    .logo { width: 80px; display: block; margin: 10px auto; }
    .container { max-width: 800px; margin: auto; }
    #services-container { margin-top: 20px; }
    table { width: 100%; margin-top: 10px; }
    th, td { text-align: center; padding: 8px; }
    .btn-danger { margin-top: 5px; }
  </style>
</head>

<body>
<div class="container">
  <img src="/Artboard 5@5x.png" alt="logo" class="logo">
  <div class="form-container">
    <h2>تعديل الطلب</h2>
    <form id="editTaskForm">

      <!-- بيانات العميل -->
      <div class="mb-3">
        <label class="form-label">اسم العميل</label>
        <input type="text" class="form-control" name="customerName" value="<%= task.customerName %>" required>
      </div>
      <div class="mb-3">
        <label class="form-label">رقم الهاتف</label>
        <input type="text" class="form-control" name="customerPhone" value="<%= task.customerPhone %>" required>
      </div>

      <!-- خريطة تحديد الموقع -->
      <div id="map" style="height: 300px; width: 100%; margin-bottom: 15px;"></div>
      <input type="hidden" id="customerLat" name="customerLat" value="<%= task.customerLat %>">
      <input type="hidden" id="customerLng" name="customerLng" value="<%= task.customerLng %>">
      <input type="hidden" id="customerLocation" name="customerLocation">
        
        

      <!-- الخدمات -->
      <h2>اختر الخدمات المطلوبة:</h2>
      <div id="services-container">
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>التصنيف</th>
              <th>الخدمة</th>
              <th>السعر</th>
              <th>الكمية</th>
              <th>الإجمالي</th>
              <th>حذف</th>
            </tr>
          </thead>
          <tbody id="servicesBody"></tbody>
        </table>
        <button type="button" class="btn btn-success" onclick="addServiceRow()">➕ إضافة خدمة أخرى</button>
      </div>

      <!-- وقت الخدمة والدفع -->
      <div class="mb-3 mt-3">
        <label class="form-label">وقت الخدمة</label>
        <input type="text" class="form-control" name="serviceTime" value="<%= task.serviceTime %>" required>
      </div>

      <div class="mb-3">
        <label class="form-label">طريقة الدفع</label>
        <select class="form-select" name="paymentMethod" required>
          <option value="">اختر</option>
          <option value="دفع لدى المعرض" <%= task.paymentMethod === 'دفع لدى المعرض' ? 'selected' : '' %>>دفع لدى المعرض</option>
          <option value="الدفع عند التركيب" <%= task.paymentMethod === 'الدفع عند التركيب' ? 'selected' : '' %>>الدفع عند التركيب</option>
        </select>
      </div>

      <!-- الحالة -->
      <div class="mb-3">
        <label class="form-label">الحالة</label>
        <select class="form-select" name="status" required>
          <option value="Assigned" <%= task.status === 'Assigned' ? 'selected' : '' %>>Assigned</option>
          <option value="InProgress" <%= task.status === 'InProgress' ? 'selected' : '' %>>In Progress</option>
          <option value="On Hold" <%= task.status === 'On Hold' ? 'selected' : '' %>>On Hold</option>
          <option value="completed" <%= task.status === 'completed' ? 'selected' : '' %>>Completed</option>
          <option value="canceled" <%= task.status === 'canceled' ? 'selected' : '' %>>Canceled</option>
          <option value="New" <%= task.status === 'New' ? 'selected' : '' %>>New</option>
        </select>
      </div>

      <!-- إجمالي السعر -->
      <div class="mb-3">
        <h5>الإجمالي بدون ضريبة: <span id="baseTotal">0</span> SAR</h5>
        <h5>ضريبة القيمة المضافة (15%): <span id="vatAmount">0</span> SAR</h5>
        <h5><strong>الإجمالي الكلي: <span id="totalPrice">0</span> SAR</strong></h5>
        <input type="hidden" name="totalPrice" id="hiddenTotalPrice" value="0">
      </div>

      <!-- زر الحفظ -->
      <button type="submit" class="btn btn-primary w-100">💾 حفظ التعديلات</button>

    </form>
  </div>
</div>

<!-- سكريبت -->
<script>
const allServices = <%- JSON.stringify(allServices || []) %>;
const selectedServiceIds = <%- JSON.stringify(selectedServiceIds || []) %>;
const serviceQuantities = <%- JSON.stringify(serviceQuantities || {}) %>;

function createServiceOptions(category) {
  return allServices.filter(s => s.category === category)
    .map(s => `<option value="${s.id}" data-price="${s.price}">${s.name}</option>`).join('');
}

function addServiceRow(selected = {}) {
  const tbody = document.getElementById("servicesBody");
  const row = document.createElement("tr");

  const categories = [...new Set(allServices.map(s => s.category))];
  const selectedCategory = selected.category || categories[0];

  row.innerHTML = `
    <td><select class="form-control category-select">${categories.map(c => `<option value="${c}" ${c === selectedCategory ? 'selected' : ''}>${c}</option>`)}</select></td>
    <td><select class="form-control service-select"></select></td>
    <td><span class="unit-price">0</span> SAR</td>
    <td><input type="number" class="form-control qty-input" value="${selected.quantity || 1}" min="1"></td>
    <td><span class="line-total">0</span> SAR</td>
    <td><button type="button" class="btn btn-danger" onclick="this.closest('tr').remove(); calculateOrderTotals();">🗑️ حذف</button></td>
  `;
  tbody.appendChild(row);

  const categorySelect = row.querySelector(".category-select");
  const serviceSelect = row.querySelector(".service-select");
  const qtyInput = row.querySelector(".qty-input");

  function updateServiceOptions() {
    serviceSelect.innerHTML = createServiceOptions(categorySelect.value);
    updateRowPrices();
  }

  function updateRowPrices() {
    const price = parseFloat(serviceSelect.selectedOptions[0]?.dataset.price || 0);
    const qty = parseInt(qtyInput.value) || 1;
    row.querySelector(".unit-price").innerText = price.toFixed(2);
    row.querySelector(".line-total").innerText = (price * qty).toFixed(2);
    calculateOrderTotals();
  }

  categorySelect.addEventListener("change", updateServiceOptions);
  serviceSelect.addEventListener("change", updateRowPrices);
  qtyInput.addEventListener("input", updateRowPrices);

  updateServiceOptions();

  if (selected.serviceId) {
    serviceSelect.value = selected.serviceId;
    updateRowPrices();
  }
}

function calculateOrderTotals() {
  let baseTotal = 0;
  document.querySelectorAll('#servicesBody tr').forEach(row => {
    const lineTotal = parseFloat(row.querySelector('.line-total').innerText) || 0;
    baseTotal += lineTotal;
  });
  const vat = baseTotal * 0.15;
  const total = baseTotal + vat;
  document.getElementById('baseTotal').innerText = baseTotal.toFixed(2);
  document.getElementById('vatAmount').innerText = vat.toFixed(2);
  document.getElementById('totalPrice').innerText = total.toFixed(2);
  document.getElementById('hiddenTotalPrice').value = total.toFixed(2);
}

// تحميل البيانات الحالية
window.onload = () => {
  if (selectedServiceIds.length > 0) {
    selectedServiceIds.forEach(id => {
      const service = allServices.find(s => s.id === id);
      if (service) {
        addServiceRow({
          category: service.category,
          serviceId: service.id,
          quantity: serviceQuantities[service.id] || 1
        });
      }
    });
  } else {
    addServiceRow();
  }
  calculateOrderTotals();
};

// حفظ البيانات
document.getElementById("editTaskForm").addEventListener("submit", async function(e) {
  e.preventDefault();
  const form = new FormData(this);

  const services = [];
  document.querySelectorAll('#servicesBody tr').forEach(row => {
    const serviceId = parseInt(row.querySelector('.service-select').value);
    const quantity = parseInt(row.querySelector('.qty-input').value) || 1;
    services.push({ id: serviceId, quantity });
  });

  const payload = {
    customerPhone: form.get("customerPhone"),
    customerName: form.get("customerName"),
    customerLat: parseFloat(form.get("customerLat")),
    customerLng: parseFloat(form.get("customerLng")),
    serviceTime: form.get("serviceTime"),
    paymentMethod: form.get("paymentMethod"),
    status: form.get("status"),
    totalPrice: parseFloat(document.getElementById('hiddenTotalPrice').value),
    services: services
  };

  try {
    const response = await fetch(`/edit_task/<%= task.id %>`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload)
    });
    const result = await response.json();
    if (response.ok && result.success) {
      alert("✅ تم حفظ التعديلات بنجاح");
      window.location.href = "/admin_dashboard";
    } else {
      alert("❌ فشل الحفظ: " + (result.message || "خطأ غير معروف"));
    }
  } catch (err) {
    console.error(err);
    alert("❌ حدث خطأ أثناء الإرسال");
  }
});
</script>
<!-- Google Maps API -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAFZcWUfcnxoAlGVGf7X7b4pE2IxbHDYzw&libraries=places"></script>

<script>
let map, marker, geocoder, searchBox;

function initMap() {
    const initialPosition = {
        lat: parseFloat(document.getElementById('customerLat').value) || 24.7136,
        lng: parseFloat(document.getElementById('customerLng').value) || 46.6753
    };
    map = new google.maps.Map(document.getElementById('map'), {
        center: initialPosition,
        zoom: 10
    });

    geocoder = new google.maps.Geocoder();
    placeMarker(initialPosition);

    map.addListener('click', function(event) {
        placeMarker(event.latLng);
    });

    const input = document.createElement("input");
    input.setAttribute("id", "map-search");
    input.setAttribute("type", "text");
    input.setAttribute("placeholder", "ابحث عن موقع");
    input.classList.add("form-control");
    input.style.marginBottom = "10px";
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

    searchBox = new google.maps.places.SearchBox(input);

    map.addListener('bounds_changed', function() {
        searchBox.setBounds(map.getBounds());
    });

    searchBox.addListener('places_changed', function() {
        const places = searchBox.getPlaces();
        if (places.length === 0) return;
        const place = places[0];
        if (!place.geometry) return;
        placeMarker(place.geometry.location);
        map.panTo(place.geometry.location);
    });
}

function placeMarker(location) {
    if (marker) marker.setMap(null);

    marker = new google.maps.Marker({
        position: location,
        map: map,
        draggable: true
    });

    updateLocationFields(location);

    marker.addListener('dragend', function() {
        updateLocationFields(marker.getPosition());
    });
}

function updateLocationFields(location) {
    document.getElementById('customerLat').value = location.lat();
    document.getElementById('customerLng').value = location.lng();

    geocoder.geocode({ location: location }, function(results, status) {
        if (status === 'OK' && results[0]) {
            document.getElementById('customerLocation').value = results[0].formatted_address;
        } else {
            document.getElementById('customerLocation').value = `Lat: ${location.lat()}, Lng: ${location.lng()}`;
        }
    });
}

// ✅ تأكد أنه يشتغل مع كل تحميل الصفحة
window.addEventListener('load', () => {
    initMap();
});
</script>




</body>
</html>
